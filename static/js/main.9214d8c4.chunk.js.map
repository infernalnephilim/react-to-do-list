{"version":3,"sources":["components/Header.js","components/Form.js","components/Task.js","components/ToDo.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Form","onSubmit","this","props","addTask","type","name","defaultValue","value","disabled","Task","markDone","parseInt","id","removeItem","priority","checked","done","onChange","bind","onClick","ToDo","state","currentPage","rows","_this","pagesNr","Math","ceil","tasksLength","setState","e","rowsPerPage","sortArrowsUp","document","getElementsByClassName","forEach","call","style","opacity","target","dataset","order","sort","col","transform","_this2","data-col","data-order","tasks","map","i","components_Task","key","deleteTask","previousSite","nextSite","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","data","dataLength","filter","length","saveData","preventDefault","task","elements","unshift","display","reset","console","log","defaultRowNr","b","localeCompare","reverse","priorities","indexOf","getData","localStorage","setItem","JSON","stringify","cachedData","getItem","parsedData","parse","components_Header","components_Form","components_ToDo","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9214d8c4.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport '../App.css';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"ToDoListApp__header\">\r\n                <h1>To do List</h1>\r\n            </header>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React, {Component} from 'react';\r\nimport '../App.css';\r\n\r\nclass Form extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"ToDoListApp__form\">\r\n                <form className=\"form\" onSubmit={this.props.addTask}>\r\n                    <div className=\"form__input form__input--name\">\r\n                        <input type=\"text\" name=\"name\"/>\r\n                        <span className=\"form__info form__info--name\">\r\n                            <i className=\"fas fa-exclamation-circle\"></i> This field cannot be empty\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"form__input\">\r\n                        <select defaultValue=\"None\" name=\"priority\">\r\n                            <option value=\"None\" disabled=\"disabled\">Priority</option>\r\n                            <option value=\"Low\">Low</option>\r\n                            <option value=\"Medium\">Medium</option>\r\n                            <option value=\"High\">High</option>\r\n                        </select>\r\n                        <span className=\"form__info form__info--priority\">\r\n                            <i className=\"fas fa-exclamation-circle\"></i> Choose one of the priorities: Low, Medium or High\r\n                        </span>\r\n                    </div>\r\n                    <button>Add</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React, {Component} from 'react';\r\nimport '../App.css';\r\n\r\nclass Task extends Component {\r\n    markDone(){\r\n        this.props.markDone(parseInt(this.props.id));\r\n    }\r\n    removeItem(){\r\n        this.props.removeItem(this.props.id);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"task\">\r\n                <div className=\"to-do__col to-do__col--name\">\r\n                    {this.props.name}\r\n                </div>\r\n                <div className=\"to-do__col to-do__col--priority\">\r\n                    {this.props.priority}\r\n                </div>\r\n                <div className=\"to-do__col to-do__col--done\">\r\n                    <label className=\"custom-checkbox\">\r\n                    <input type=\"checkbox\" checked={this.props.done} onChange={this.markDone.bind(this)}/>\r\n                    <span className=\"custom-checkbox__checkmark\"> </span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"to-do__col to-do__col--remove\">\r\n                    <i className=\"far fa-trash-alt\" onClick={this.removeItem.bind(this)}> </i>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Task;","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport Task from \"./Task\";\r\n\r\nclass ToDo extends Component {\r\n    state = {\r\n        currentPage: 1,\r\n        rows: this.props.rows,\r\n        pagesNr: Math.ceil(this.props.tasksLength / this.props.rows)\r\n    };\r\n\r\n    previousSite() {\r\n        let pagesNr = Math.ceil(this.props.tasksLength / this.props.rows);\r\n        if (pagesNr === 0) pagesNr = 1;\r\n\r\n        this.setState({\r\n            pagesNr: pagesNr\r\n        });\r\n        let currentPage = this.state.currentPage;\r\n        currentPage = currentPage - 1;\r\n        if (currentPage < 1) {\r\n            currentPage = 1;\r\n        }\r\n        this.setState({\r\n            currentPage: currentPage\r\n        });\r\n    }\r\n\r\n    nextSite() {\r\n        let pagesNr = Math.ceil(this.props.tasksLength / this.props.rows);\r\n        if (pagesNr === 0) pagesNr = 1;\r\n\r\n        this.setState({\r\n            pagesNr: pagesNr\r\n        });\r\n        let currentPage = this.state.currentPage;\r\n        currentPage = currentPage + 1;\r\n        if (currentPage > this.state.pagesNr) {\r\n            currentPage = this.state.pagesNr;\r\n        }\r\n        this.setState({\r\n            currentPage: currentPage\r\n        });\r\n    }\r\n\r\n    rowsPerPage(e) {\r\n        this.setState({\r\n            currentPage: 1,\r\n            rows: e.value\r\n        });\r\n        this.props.rowsPerPage(e);\r\n    }\r\n\r\n    sort(e) {\r\n        let sortArrowsUp = document.getElementsByClassName(\"fa-sort-up\");\r\n        [].forEach.call(sortArrowsUp, (e) => {\r\n            e.style.opacity = \"0\"\r\n        });\r\n        if (e.target.dataset.order === \"\") {\r\n            e.target.dataset.order = \"asc\";\r\n        }\r\n        this.props.sort(e.target.dataset.col, e.target.dataset.order);\r\n        e.target.getElementsByClassName(\"fa-sort-up\")[0].style.opacity = \"1\";\r\n        if (e.target.dataset.order === \"asc\") {\r\n            e.target.dataset.order = \"desc\";\r\n            e.target.getElementsByClassName(\"fa-sort-up\")[0].style.transform = \"rotate(0deg)\";\r\n\r\n        } else {\r\n            e.target.dataset.order = \"asc\";\r\n            e.target.getElementsByClassName(\"fa-sort-up\")[0].style.transform = \"rotate(180deg)\";\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ToDoListApp__to-do to-do\">\r\n                <div className=\"to-do__row to-do__row--header\">\r\n                    <div className=\"to-do__col to-do__col--name\" data-col=\"name\" data-order=\"\"\r\n                         onClick={this.sort.bind(this)}>\r\n                        Task name <i className=\"fas fa-sort-up\"></i>\r\n                    </div>\r\n                    <div className=\"to-do__col to-do__col--priority\" data-col=\"priority\" data-order=\"\"\r\n                         onClick={this.sort.bind(this)}>\r\n                        Priority <i className=\"fas fa-sort-up\"></i>\r\n                    </div>\r\n                    <div className=\"to-do__col to-do__col--done\" data-col=\"done\" data-order=\"\"\r\n                         onClick={this.sort.bind(this)}>\r\n                        Done <i className=\"fas fa-sort-up\"></i>\r\n                    </div>\r\n                    <div className=\"to-do__col to-do__col--remove\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"to-do__row to-do__row--list\">\r\n                    {\r\n                        this.props.tasksLength < 1 ?\r\n                            <div className=\"to-do__row\">\r\n                                <div className=\"to-do__col\">\r\n                                    <p>There is nothing to do yet!</p>\r\n                                </div>\r\n                            </div>\r\n                            : \"\"\r\n                    }\r\n                    {\r\n                        this.props.tasks.map((e, i) => {\r\n                                if (i >= (this.state.currentPage - 1) * this.props.rows\r\n                                    && (i <= this.state.currentPage * this.props.rows))\r\n                                    return <Task\r\n                                        key={i}\r\n                                        id={e.id}\r\n                                        name={e.name}\r\n                                        priority={e.priority}\r\n                                        done={e.done}\r\n                                        removeItem={this.props.deleteTask}\r\n                                        markDone={this.props.markDone}\r\n                                    />;\r\n                                return \"\";\r\n                            }\r\n                        )\r\n                    }\r\n                </div>\r\n                <div className=\"to-do__row to-do__row--footer\">\r\n                    <div className=\"to-do__col\">\r\n                    <span className=\"to-do-footer__choose-rows\">\r\n                        <label>Rows per page:</label>\r\n                        <select defaultValue={this.props.rows} onChange={this.rowsPerPage.bind(this)}>\r\n                            <option value=\"5\">5</option>\r\n                            <option value=\"10\">10</option>\r\n                            <option value=\"15\">15</option>\r\n                        </select>\r\n                    </span>\r\n                    </div>\r\n                    <div className=\"to-do__col\">\r\n                        <div className=\"to-do-footer__pagination\">\r\n                            <div className=\"pages\">\r\n                                {((this.state.currentPage - 1) * this.props.rows + 1 > this.props.tasksLength)\r\n                                    ? 0 : (this.state.currentPage - 1) * this.props.rows + 1}\r\n                                &nbsp;\r\n                                -\r\n                                &nbsp;\r\n                                {\r\n                                    ((this.state.currentPage * this.props.rows) > this.props.tasksLength)\r\n                                        ? this.props.tasksLength : (this.state.currentPage * this.props.rows)\r\n                                } of&nbsp;{this.props.tasksLength}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"to-do__col controls\">\r\n                            <span className=\"controls__arrow controls__arrow--left\"\r\n                                  onClick={this.previousSite.bind(this)}>\r\n                                <i className=\"fas fa-angle-left\"></i>\r\n                            </span>\r\n                        <span className=\"controls__arrow controls__arrow--right\" onClick={this.nextSite.bind(this)}>\r\n                                <i className=\"fas fa-angle-right\"></i>\r\n                            </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToDo;","import React, {Component} from 'react';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Form from \"./components/Form\";\nimport ToDo from \"./components/ToDo\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tasks: [],\n            tasksLength: 0,\n            defaultRowNr: 5\n\n        };\n        this.getData();\n\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    saveData() {\n        const tasks = this.state.tasks;\n        localStorage.setItem(\"taskData_AleksandraPoltorak_ToDoApp2\", JSON.stringify(tasks));\n    };\n\n    getData() {\n        const cachedData = localStorage.getItem(\"taskData_AleksandraPoltorak_ToDoApp2\");\n        if (cachedData) {\n            const parsedData = JSON.parse(cachedData);\n            this.state = {\n                tasks: parsedData,\n                tasksLength: parsedData.length,\n                defaultRowNr: 5\n            };\n        }\n    };\n\n    deleteTask = (id) => {\n        let data = this.state.tasks;\n        data = data.filter(i => i.id !== id);\n\n        const dataLength = data.length;\n        this.setState({\n            tasks: data,\n            tasksLength: dataLength\n        }, ()=>{\n            this.saveData();\n        });\n\n    };\n    addTask = (e) => {\n        e.preventDefault();\n        const task = e.target.elements.name.value;\n        const priority = e.target.elements.priority.value;\n        if (task && priority !== \"None\") {\n            const data = this.state.tasks;\n            data.unshift({\n                \"id\": data.length + 1, \"name\": task, \"priority\": priority, \"done\": false\n            });\n            const dataLength = data.length;\n            this.setState({\n                tasks: data,\n                tasksLength: dataLength\n            }, ()=> {\n                this.saveData();\n            });\n\n            document.getElementsByClassName(\"form__info--name\")[0].style.display = \"none\";\n            document.getElementsByClassName(\"form__info--priority\")[0].style.display = \"none\";\n            e.target.reset();\n\n        } else {\n            if(task === \"\"){\n                document.getElementsByClassName(\"form__info--name\")[0].style.display = \"block\";\n            } else{\n                document.getElementsByClassName(\"form__info--name\")[0].style.display = \"none\";\n            }\n            if(priority === \"None\"){\n                document.getElementsByClassName(\"form__info--priority\")[0].style.display = \"block\";\n            } else{\n                document.getElementsByClassName(\"form__info--priority\")[0].style.display = \"none\";\n            }\n            console.log(\"Nie uzupełniono wszystkich pól\");\n        }\n    };\n\n    markDone = (id) => {\n        let data = this.state.tasks;\n        data = data.map(i => {\n            if (i.id === id) i.done = !i.done;\n            return i;\n        });\n        const dataLength = data.length;\n        this.setState({\n            tasks: data,\n            tasksLength: dataLength\n        }, ()=>{\n            this.saveData();\n        });\n    };\n\n    rowsPerPage = (rows) => {\n        this.setState({\n            defaultRowNr: rows.target.value\n        });\n    };\n\n    sort = (col, type) => {\n        console.log(col);\n        console.log(type);\n        switch (col) {\n            case \"name\":\n                if (type === \"asc\") {\n                    const data = this.state.tasks;\n                    data.sort((a, b) => {\n                        return a.name.localeCompare(b.name)\n                    });\n                    this.setState({\n                        tasks: data\n                    });\n                } else if (type === \"desc\") {\n                    const data = this.state.tasks;\n                    data.sort((a, b) => {\n                        return a.name.localeCompare(b.name)\n                    }).reverse();\n                    this.setState({\n                        tasks: data\n                    });\n                }\n                break;\n            case \"priority\":\n                const priorities = [\"Low\", \"Medium\", \"High\"];\n                if (type === \"asc\") {\n                    const data = this.state.tasks;\n                    data.sort((a, b) => priorities.indexOf(a.priority) - priorities.indexOf(b.priority));\n                    this.setState({\n                        tasks: data\n                    });\n                } else if (type === \"desc\") {\n                    const data = this.state.tasks;\n                    data.sort((a, b) => priorities.indexOf(a.priority) - priorities.indexOf(b.priority)).reverse();\n                    this.setState({\n                        tasks: data\n                    });\n                }\n                break;\n            case \"done\":\n                if (type === \"asc\") {\n                    const data = this.state.tasks;\n                    data.sort((a, b) => a.done - b.done);\n                    this.setState({\n                        tasks: data\n                    });\n                } else if (type === \"desc\") {\n                    const data = this.state.tasks;\n                    data.sort((a, b) => a.done - b.done).reverse();\n                    this.setState({\n                        tasks: data\n                    });\n                }\n                break;\n            default:\n                console.log(\"Nieprawidlowe parametry\");\n\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"ToDoListApp\">\n                <Header/>\n                <Form addTask={this.addTask}/>\n                <ToDo\n                    tasks={this.state.tasks}\n                    tasksLength={this.state.tasksLength}\n                    rows={this.state.defaultRowNr}\n                    rowsPerPage={this.rowsPerPage}\n                    markDone={this.markDone}\n                    deleteTask={this.deleteTask}\n                    sort={this.sort}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}